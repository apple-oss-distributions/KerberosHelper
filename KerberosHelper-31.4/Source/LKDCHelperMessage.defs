/*
 * Copyright (c) 2007 Apple Inc. All rights reserved.
 *
 * @APPLE_LICENSE_HEADER_START@
 *
 * This file contains Original Code and/or Modifications of Original Code
 * as defined in and that are subject to the Apple Public Source License
 * Version 2.0 (the 'License'). You may not use this file except in
 * compliance with the License. Please obtain a copy of the License at
 * http://www.opensource.apple.com/apsl/ and read it before using this
 * file.
 *
 * The Original Code and all software distributed under the License are
 * distributed on an 'AS IS' basis, WITHOUT WARRANTY OF ANY KIND, EITHER
 * EXPRESS OR IMPLIED, AND APPLE HEREBY DISCLAIMS ALL SUCH WARRANTIES,
 * INCLUDING WITHOUT LIMITATION, ANY WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE, QUIET ENJOYMENT OR NON-INFRINGEMENT.
 * Please see the License for the specific language governing rights and
 * limitations under the License.
 *
 * @APPLE_LICENSE_HEADER_END@
 */

#include <mach/std_types.defs>
#include <mach/mach_types.defs>

import "LKDCHelper-types.h";

/* 1005 is the value of kDNSServiceMaxDomainName from dns_sd.h - MiG doesn't do "includes"! */
type hostnameIn_t		= c_string[*:1005];
type hostnameOut_t		= c_string[*:1005];
type realmNameIn_t		= c_string[*:64];
type realmNameOut_t		= c_string[*:64];

subsystem LKDCHelper 7683265;
serverprefix do_;
userprefix request_;

simpleroutine LKDCHelperExit(
						port		: mach_port_t;
	ServerAuditToken	token		: audit_token_t);

simpleroutine LKDCDumpStatus(
						port		: mach_port_t;
						level		: int;
	ServerAuditToken	token		: audit_token_t);

simpleroutine LKDCSetLogLevel(
						port		: mach_port_t;
						level		: int;
	ServerAuditToken	token		: audit_token_t);

routine LKDCGetLocalRealm(
						port		: mach_port_t;
			out			realm		: realmNameOut_t;
			out			err			: int;
	ServerAuditToken	token		: audit_token_t);
	
routine LKDCDiscoverRealm(
						port		: mach_port_t;
						hostname	: hostnameIn_t;
			out			realm		: realmNameOut_t;
			out			err			: int;
	ServerAuditToken	token		: audit_token_t);

routine LKDCFindKDCForRealm(
						port		: mach_port_t;
						realm		: realmNameIn_t;
			out			hostname	: hostnameOut_t;
			out			kdcport		: int;
			out			err			: int;
	ServerAuditToken	token		: audit_token_t);
